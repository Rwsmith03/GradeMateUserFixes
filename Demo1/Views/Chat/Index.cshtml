@{
    ViewData["Title"] = "Chat";
}

<div id="chat-container">
    <div id="messages" style="border: 1px solid #ccc; height: 500px; background-color: white; overflow-y: scroll; padding: 10px;"></div>
    <div style="margin-top: 20px; display: flex; align-items: center;">
        <label for="userIdInput" style="margin-right: 10px;">Enter receiver's ID:</label>
        <input id="userIdInput" type="text" placeholder="User ID" class="form-control mb-2" />
    </div>
    <input id="userInput" type="text" placeholder="Your name" class="form-control mb-2" />
    <input id="messageInput" type="text" placeholder="Enter message" class="form-control" />
    <button id="sendButton" class="btn btn-primary mt-2">Send</button>
</div>


<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.4/signalr.min.js"></script>
<script>
    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/ChatHub")
        .build();
    const messagesDiv = document.getElementById("messages");
    const messageInput = document.getElementById("messageInput");
    const userInput = document.getElementById("userInput");
    const userIdInput = document.getElementById("userIdInput");
    const sendButton = document.getElementById("sendButton");

    connection.on("ReceiveMessage", (user, message) => {
        const messageElement = document.createElement("div");
        messageElement.textContent = `${user}:  ${message}`;
        messagesDiv.appendChild(messageElement);
    });

    sendButton.addEventListener("click", async () => {
        const userId = userIdInput.value || "Unknown user";
        const user = userInput.value || "Anonymous";
        const message = messageInput.value;
        if (message) {
            try {
                await connection.invoke("SendMessage", user, message);
                const sentMessageElement = document.createElement("div");
                sentMessageElement.textContent = `You to ${userId}: ${message}`;
                messagesDiv.appendChild(sentMessageElement);
                messageInput.value = "";
            } catch (err) {
                console.error("Error sending message: ", err);
            }
        }
    });
    connection.start().then(() => {
        sendButton.disabled = false;
    }).catch(err => console.error(err.toString()));
</script>
<style>
    .message-container {
        border: 1px solid #ccc;
        height: 500px;
        overflow-y: scroll;
        padding: 10px;
        background-color: white;
    }
    label {
        color: greenyellow;
    }
</style>
