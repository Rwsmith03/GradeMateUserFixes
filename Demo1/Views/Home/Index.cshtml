@{
    ViewData["Title"] = "Home Page";
}

<div class="container">
    <main role="main" class="pb-3">
        <div class="row mb-4">
            <!-- Current Courses Section -->
            <div class="col-md-4">
                <div class="card">
                    <div class="card-header">
                        Current Courses
                    </div>
                    <div class="card-body">
                        <button class="btn btn-outline-primary">Find first available time</button>
                        <div class="mt-3">
                            <label for="course-subject">Schedule a session for:</label>
                            <select id="course-subject" class="form-select">
                                <option selected>Choose a subject</option>
                                <!-- Examples -->
                                <option value="math">ALGORITHMS</option>
                                <option value="computers">SOFTWARE ENGINEERING</option>
                                <option value="linguistics">AMERICAN SIGN LANGUAGE</option>
                                <!-- Add more subjects as needed -->
                            </select>
                        </div>
                    </div>
                </div>
            </div>
            <!-- Calendar Section -->
            <div class="col-md-6 text-center">
                <div class="card">
                    <div class="card-header">
                        <button class="btn btn-light">&lt;</button>
                        <span>Dec 2024</span>
                        <button class="btn btn-light">&gt;</button>
                    </div>
                    <div class="card-body">
                        <div id="calendar">Calendar</div>
                        <div class="mui-panel schedPanel">
                            <!-- if a student (or consultant), show upcoming appointments -->
                            <div id="classSched" role="region" aria-labelledby="dp4" aria-live="polite">
                                <h2 class="plain scheduleOptions">
                                    <span tabindex="0" id="dp4" role="heading" aria-level="2" aria-expanded="false" aria-live="polite" style="cursor: pointer; text-decoration-style: dotted;" data-date-format="yyyy-mm-dd" data-date="2024-11-04"></span>
                                </h2>
                                <div id="calendarDays" style="display: grid; grid-template-columns: repeat(7, 1fr); gap: 5px;"></div>
                                <style>
                                    .highlight {
                                        background-color: yellow;
                                    }
                                    .day {
                                        border: 1px solid #ccc;
                                        padding: 10px;
                                        text-align: left;
                                        height: 50px;
                                        position: relative;
                                    }
                                    .day:hover {
                                        border: 2px solid black; /* Bold outline on hover */
                                    }
                                </style>
                                <script type="text/javascript">
                                    let currentDate = new Date(2024, 11, 1); // December 2024
                                    const today = new Date(); // Current date
                                    
                                    function renderCalendar() {
                                        const monthDays = document.getElementById('calendarDays');
                                        monthDays.innerHTML = '';
                                        const month = currentDate.getMonth();
                                        const year = currentDate.getFullYear();
                                        const firstDay = new Date(year, month, 1).getDay();
                                        const daysInMonth = new Date(year, month + 1, 0).getDate();
                                        const weekdays = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];
                                        const scheduledSessions = {2: ['Algorithm 3 PM'], 3: ['Software Engineering 2 PM',
                                        'American Sign Language at 5 PM'], 5: ['Software Engineering 2 PM',
                                        'American Sign Language at 5 PM'], 6: ['Algorithm 3 PM'], 9: ['Algorithm 3 PM'],
                                        10: ['Software Engineering 2 PM', 'American Sign Language at 5 PM'], 12:
                                        ['Software Engineering 2 PM', 'American Sign Language at 5 PM'], 13:
                                        ['Algorithm 3 PM'], 16: ['Algorithm 3 PM'], 17: ['Software Engineering 2 PM',
                                        'American Sign Language at 5 PM'], 19: ['Software Engineering 2 PM',
                                        'American Sign Language at 5 PM'], 20: ['Algorithm 3 PM'], 23: ['Algorithm 3 PM'],
                                        24: ['Software Engineering 2 PM', 'American Sign Language at 5 PM'], 26:
                                        ['Software Engineering 2 PM', 'American Sign Language at 5 PM'],
                                        27: ['Algorithm 3 PM'], 30: ['Algorithm 3 PM'], 31: ['Software Engineering 2 PM',
                                        'American Sign Language at 5 PM'],
                                        }

                                        weekdays.forEach(weekday => {
                                            const weekdayDiv = document.createElement('div');
                                            weekdayDiv.className = 'day';
                                            weekdayDiv.innerText = weekday;
                                            monthDays.appendChild(weekdayDiv);
                                        });

                                        for (let i = 0; i < firstDay; i++) {
                                            monthDays.innerHTML += '<div class="day"></div>';
                                        }

                                        for (let day = 1; day <= daysInMonth; day++) {
                                            const dayDiv = document.createElement('div');
                                            const hasAppointment = scheduledSessions[day] && scheduledSessions[day].length > 0; // Define hasAppointment
                                            dayDiv.className = `day ${hasAppointment ? 'highlight' : ''}`;
                                            dayDiv.innerText = day;

                                            //Click event listener to toggle highlight
                                            dayDiv.addEventListener('click', function() {
                                                dayDiv.classList.toggle('highlight');
                                                const sessionList = scheduledSessions[day] ? scheduledSessions[day].map(session => `<li>${session}</li>`).join('') : 'No sessions available.';
                                                alert (`Session on ${day}: \n${sessionList}`);
                                            });

                                            //Mouseover event listener to toggle highlight
                                            dayDiv.addEventListener('mouseover', function() {
                                                const sessionList = scheduledSessions[day] ? scheduledSessions[day].map(session => `<li>${session}</li>`).join('') : 'No sessions available.';
                                                const tooltip = document.createElement('div');
                                                tooltip.className = 'tooltip';
                                                tooltip.innerHTML = sessionList;
                                                tooltip.style.top = `${event.clientY}px`;
                                                tooltip.style.left = `${event.clientX}px`;
                                                document.appendChild(tooltip);
                                                tooltip.style.display = 'block';
                                            });

                                            //mouseout event listener to toggle highlight
                                            dayDiv.addEventListener('mouseout', function() {
                                                const tooltip = document.querySelector('.tooltip');
                                                if (tooltip) {
                                                    tooltip.style.display = 'none'; // Hide tooltip
                                                    document.body.removeChild(tooltip); // Remove tooltip from DOM
                                                }
                                            });
                                            
                                            // Remove tooltip on mouseout
                                            dayDiv.addEventListener('mouseout', function() {
                                                const tooltip = dayDiv.querySelector('.tooltip');
                                                if (tooltip) {
                                                    dayDiv.removeChild(tooltip);
                                                }
                                            });

                                            if (hasAppointment) {
                                                dayDiv.addEventListener('click', function() {
                                                    const sessionList = scheduledSessions[day].map(session => `<li>${session}</li>`).join('');
                                                    alert(`Sessions on ${day}: \n${sessionList}`);
                                                });
                                            }
                                            
                                            if (hasAppointment) {
                                                const cancelButton = document.createElement('span');
                                                cancelButton.innerText = 'X';
                                                cancelButton.style.color = 'red';
                                                cancelButton.style.cursor = 'pointer';
                                                cancelButton.style.position = 'absolute';
                                                cancelButton.style.top = '5px';
                                                cancelButton.style.right = '5px';
                                                cancelButton.onclick = function(event) {
                                                    event.stopPropagation(); // Prevent triggering the day click event
                                                    if (confirm(`Are you sure you want to cancel the session on ${day}?`)) {
                                                        dayDiv.classList.remove('highlight'); // Remove highlight
                                                    }
                                                };
                                                dayDiv.appendChild(cancelButton);
                                            }

                                            // Add click event listener
                                            dayDiv.addEventListener('click', function() {
                                                alert(`You clicked on day ${day}`);
                                                // Here you can add more functionality, such as opening a modal to manage appointments
                                            });
                                            monthDays.appendChild(dayDiv);
                                        }   
                                        document.getElementById('currentMonth').innerText = currentDate.toLocaleString('default', { month: 'long', year: 'numeric' });
                                    }

                                    function prevMonth() {
                                        const today = new Date();
                                        if (currentDate.getFullYear() === today.getFullYear() && currentDate.getMonth() === today.getMonth()) {
                                            return; // Prevent going to previous month if it's the current month
                                        }
                                        currentDate.setMonth(currentDate.getMonth() - 1);
                                        renderCalendar();
                                    }

                                    function nextMonth() {
                                        const today = new Date();
                                        if (currentDate.getFullYear() === today.getFullYear() && currentDate.getMonth() === today.getMonth()) {
                                            return; // Prevent going to previous month if it's the current month
                                        }
                                        if (currentDate.getMonth() == 11) { //December
                                            currentDate.setFullYear(currentDate.getFullYear() + 1);
                                            currentDate.setMonth(0); // January
                                        } else {
                                            currentDate.setMonth(currentDate.getMonth() + 1);
                                        }
                                        renderCalendar();
                                    }

                                    document.addEventListener('DOMContentLoaded', renderCalendar);
                                </script>
                            </div>
                        </div>
                    </div>
  
                </div>
            </div>
        </div>
        <!-- Cancellation Instructions -->
        <div class="row mb-4" text-left>
            <div class="col-md-8">
                <div class="alert alert-info">
                    <strong>Need to cancel?</strong><br />Use the calendar to locate your upcoming session(s).
                    Click the X in the top right corner of the highlighted box. It will ask you if you’d
                    like to cancel that appointment or all scheduled for that day.
                </div>
            </div>
        </div>
    </main>
</div>
<style>
    .alert-info {
        background-color: #38bcff;
    }
    tooltip {
        position: absolute;
        background-color: #e0ff9e;
        border: 1px solid #ccc;
        padding: 5px;
        border-radius: 5px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        z-index: 10;
        display: none; /* Initially hidden */
    }
</style>
